{"version":3,"sources":["utils/custom-hook.ts","utils/index.ts","plugins/request/index.ts","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","components/profiler.tsx","index.tsx","auth-provide/index.ts","context/auth-context.tsx","components/lib.tsx"],"names":["useMount","cb","useEffect","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","defaultInitialState","stat","data","error","defaultInitialConfig","throwOnError","useAsync","initialState","initialConfig","config","useReducer","state","action","safeDispatch","dispatch","mountedRef","useMountedRef","useCallback","current","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","then","Error","Promise","resolve","catch","reject","isIdle","isLoading","isError","isSuccess","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","useUrlQueryParam","keys","useSearchParams","searchParams","setSearchParams","useSetUrlQueryParam","stateKeys","useMemo","filtered","Object","entries","fromEntries","filter","key","includes","params","obj","cleanObject","result","forEach","val","undefined","resetRoute","window","location","href","origin","apiUrl","process","http","endpoint","a","token","headers","customConfig","method","Authorization","toUpperCase","qs","body","JSON","stringify","fetch","res","status","auth","reload","message","json","ok","useHttp","user","useAuth","ErrorBoundary","this","props","fallbackRender","children","React","Component","UnauthenticatedApp","lazy","AuthenticatedApp","App","className","FullPageError","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProvider","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","queue","Profilter","metadata","phases","onRender","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","push","setInterval","length","queueToSend","console","log","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","bootstrapUser","AuthContext","createContext","AuthProvider","setUser","useQueryClient","Provider","form","clear","context","useContext","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","Text","type","ButtonNoPadding","Button","ScreenContainer"],"mappings":"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","file":"static/js/main.6f6c19c5.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport { cleanObject } from \"utils\";\n\n/* 挂载 */\nexport const useMount = (cb: () => void) => {\n  useEffect(() => {\n    cb();\n  }, []);\n};\n\n/* 函数防抖 */\nexport const useDebounce = <V>(value: V, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n/*  */\nexport const useArray = <V>(initialArray: V[]) => {\n  const [array, setArray] = useState(initialArray);\n\n  return {\n    value: array,\n    setValue: setArray,\n    add: (val: V): void => {\n      setArray([...array, val]);\n    },\n    removeIndex: (index: number): void => {\n      const newArr = [...array];\n      newArr.splice(index, 1);\n      setArray(newArr);\n    },\n    clear: (): void => {\n      setArray([]);\n    },\n  };\n};\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\nconst defaultInitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n/* @param }throwOnError：是否抛出错误 */\nconst defaultInitialConfig = {\n  throwOnError: false,\n};\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [dispatch, mountedRef]\n  );\n};\n\n/* 异步请求 hook */\nexport const useAsync = <D>(\n  initialState?: State<D>,\n  initialConfig?: typeof defaultInitialConfig\n) => {\n  const config = { ...defaultInitialConfig, ...initialConfig };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initialState,\n    }\n  );\n\n  const safeDispatch = useSafeDispatch(dispatch);\n  /* 提供重新获取数据func, 利用 useState 惰性初始化保存函数 */\n  const [retry, setRetry] = useState(() => () => {});\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        data: null,\n        stat: \"error\",\n        error,\n      }),\n    [safeDispatch]\n  );\n\n  /* runConfig.retry 传入 retry 时调用方法 */\n  const run = useCallback(\n    (\n      promise: Promise<D>,\n      runConfig?: {\n        retry: () => Promise<D>;\n      }\n    ) => {\n      if (!promise || !promise.then) {\n        throw new Error(\"请传入 Promise\");\n      }\n\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig.retry(), runConfig);\n        }\n      });\n\n      safeDispatch({ stat: \"loading\" });\n      return promise\n        .then((data) => {\n          setData(data);\n          return Promise.resolve(data);\n        })\n        .catch((error) => {\n          setError(error);\n          if (config.throwOnError) return Promise.reject(error);\n          return error;\n        });\n    },\n    [config.throwOnError, setData, setError, safeDispatch]\n  );\n\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    retry,\n    setData,\n    setError,\n    ...state,\n  };\n};\n\n/** 修改页面标题\n * 加载时为旧title,\n * 加载后为新传入title\n * @param {boolean} keepOnUnmount: 卸载页面时, 是否丢弃当前title(立即刷新为新title)\n */\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  // 使用useRef, oldTitle就不会立即被刷新成新title\n  const oldTitle = useRef(document.title).current;\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) document.title = oldTitle;\n    };\n  }, [oldTitle, keepOnUnmount]);\n};\n\n/**\n * 读取url query\n * URLSearchParams API: https://developer.mozilla.org/zh-CN/docs/Web/API/URLSearchParams\n */\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams] = useSearchParams();\n  const setSearchParams = useSetUrlQueryParam();\n  const [stateKeys] = useState(keys);\n\n  return [\n    useMemo(() => {\n      /**\n       * keys: [\"a\"]\n       * { a: \"1\", b: \"2\" } => [[\"a\", \"1\"], [\"b\", \"2\"]] => filtered from keys... => [[\"a\", \"1\"]] => { a: \"1\" }\n       */\n      const toArr = Object.entries(Object.fromEntries(searchParams));\n      const filtered = toArr.filter(([key]) => stateKeys.includes(key as K));\n\n      return Object.fromEntries(filtered);\n    }, [searchParams, stateKeys]),\n\n    (params: Partial<{ [key in K]: unknown }>) => setSearchParams(params),\n  ] as const;\n};\n\n/** 设置 url query */\nexport const useSetUrlQueryParam = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (params: { [key in string]: unknown }) => {\n    const obj = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParams(obj);\n  };\n};\n\n/**\n * 组件挂载状态\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n\n  return mountedRef;\n};\n\ntype undoState<T> = {\n  past: T[];\n  present: T;\n  future: T[];\n};\n\nconst UNDO = \"UNDO\";\nconst REDO = \"REDO\";\nconst SET = \"SET\";\nconst RESET = \"RESET\";\n\ntype Action<T> = {\n  newPresent?: T;\n  type: typeof UNDO | typeof REDO | typeof SET | typeof RESET;\n};\n\n/* 使用 useReducer 改造 useUndo */\nconst undoReducer = <T>(state: undoState<T>, action: Action<T>) => {\n  const { past, present, future } = state;\n  const { newPresent } = action;\n\n  switch (action.type) {\n    case UNDO: {\n      if (past.length === 0) return state;\n\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      };\n    }\n    case REDO: {\n      if (future.length === 0) return state;\n\n      const next = future[0];\n      const newFuture = future.slice(1);\n\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      };\n    }\n    case SET: {\n      if (newPresent === present) return state;\n      return {\n        past: [...past, newPresent],\n        present: newPresent,\n        future: [],\n      };\n    }\n    case RESET: {\n      return {\n        past: [],\n        present: newPresent,\n        future: [],\n      };\n    }\n  }\n};\n\n/* use undo hook */\nexport const useUndo = <T>(initialPresent: T) => {\n  /* const [past, setPast] = useState<T[]>([])\n  const [present, setPresent] = useState<T>(initialPresent)\n  const [future, setFuture] = useState<T[]>([]) */\n\n  /* 互相关联的 state 可以合并成一个 state */\n  /* const [state, setState] = useState({\n    past: [] as T[],\n    present: initialPresent as T,\n    future: [] as T[],\n  }); */\n\n  /* 使用 useReducer */\n  const [state, dispatch] = useReducer(undoReducer, {\n    past: [],\n    present: initialPresent,\n    future: [],\n  });\n\n  const canUndo = state.past.length > 0;\n  const canRedo = state.future.length > 0;\n\n  const undo = useCallback(() => dispatch({ type: UNDO }), []);\n\n  const redo = useCallback(() => dispatch({ type: REDO }), []);\n\n  const set = useCallback(\n    (newPresent: T) => dispatch({ type: SET, newPresent }),\n    []\n  );\n\n  const reset = useCallback(\n    (newPresent: T) => dispatch({ type: RESET, newPresent }),\n    []\n  );\n\n  return [state, { undo, redo, set, reset, canUndo, canRedo }];\n};\n","export const isFalsy = (val: unknown) => (val === 0 ? false : !val);\n\nexport const isVoid = (val: any) => [undefined, null, \"\"].includes(val);\n\n/* 清除无效值 */\nexport const cleanObject = (obj?: { [key: string]: unknown }) => {\n  if (!obj) return {};\n\n  const result = { ...obj };\n  Object.keys(result).forEach((key) => {\n    if (isVoid(result[key])) {\n      delete result[key];\n    }\n  });\n\n  return result;\n};\n\n/* 函数防抖 */\nconst debounce = (func: () => void, delay = 300) => {\n  let timeout: any;\n\n  return (...param: any) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      // @ts-ignore\n      typeof func === \"function\" && func(...param);\n    }, delay);\n  };\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n","import * as qs from \"qs\";\r\nimport * as auth from \"auth-provide\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { useCallback } from \"react\";\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\n/* extends: 继承类型 */\r\ninterface Config extends RequestInit {\r\n  data?: object;\r\n  token?: string;\r\n}\r\n\r\n/* http请求封装 */\r\nexport const http = async (\r\n  endpoint: string,\r\n  { data = {}, token = \"\", headers, ...customConfig }: Config = {}\r\n) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n      \"Content-Type\": data ? \"application/json\" : \"\",\r\n    },\r\n    ...customConfig,\r\n  };\r\n\r\n  /* 判断 method 设置请求参数 */\r\n  if (config.method.toUpperCase() === \"GET\") {\r\n    endpoint += `?${qs.stringify(data)}`;\r\n  } else {\r\n    config.body = JSON.stringify(data);\r\n  }\r\n\r\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async (res) => {\r\n    if (res.status === 401) {\r\n      await auth.logout();\r\n      window.location.reload();\r\n      return Promise.reject({ message: \"请重新登录!\" });\r\n    }\r\n\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      return data;\r\n    } else {\r\n      return Promise.reject(data);\r\n    }\r\n  });\r\n};\r\n\r\nexport const useHttp = () => {\r\n  const { user } = useAuth();\r\n\r\n  /* Parameters typeof：typescript操作符 */\r\n  return useCallback(\r\n    (...[endpoint, config]: Parameters<typeof http>) =>\r\n      http(endpoint, { ...config, token: user?.token }),\r\n    [user?.token]\r\n  );\r\n};\r\n\r\n// export const useHttp = (...[endpoint, config]: Parameters<typeof http>) => {\r\n//   const { user } = useAuth()\r\n\r\n//   /* Parameters typeof：typescript操作符 */\r\n//   return http(endpoint, { ...config, token: user?.token })\r\n// }\r\n","/* 错误边界 */\r\nimport React from \"react\";\r\n\r\ntype FallBackRender = (props: { error: Error | null }) => React.ReactElement;\r\n\r\nexport class ErrorBoundary extends React.Component<\r\n  React.PropsWithChildren<{ fallbackRender: FallBackRender }>,\r\n  { error: Error | null }\r\n> {\r\n  state = { error: null };\r\n\r\n  /** 子组件抛出异常, getDerivedStateFromError接受异常并调用\r\n   * 返回值会赋值给state\r\n   */\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    const { fallbackRender, children } = this.props;\r\n    if (error) return fallbackRender({ error });\r\n    return children;\r\n  }\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\n// import { UnauthenticatedApp } from \"unauthenticated-app\";\n// import { AuthenticatedApp } from \"authenticated-app\";\nimport { useAuth } from \"context/auth-context\";\nimport { ErrorBoundary } from \"components/error-boundary\";\nimport { FullPageError } from \"components/lib\";\n\nconst UnauthenticatedApp = React.lazy(() => import(\"unauthenticated-app\"));\nconst AuthenticatedApp = React.lazy(() => import(\"authenticated-app\"));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageError}>\n        {/* <React.Suspense fallback={(<div>loading...</div>)}> */}\n        <React.Suspense fallback={<div></div>}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from \"react\";\nimport { AuthProvider } from \"context/auth-context\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","import React, {\n  Profiler,\n  ProfilerProps,\n  ProfilerOnRenderCallback,\n} from \"react\";\n\ntype Props = { metadata?: any; phases?: (\"mount\" | \"update\")[] } & Omit<\n  ProfilerProps,\n  \"onRender\"\n>;\n\nlet queue: unknown[] = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) return;\n\n  const queueToSend = [...queue];\n  queue = [];\n  console.log(queueToSend);\n};\n/* 每5秒输出到控制台一次 */\nsetInterval(sendProfileQueue, 5000);\n\nexport default function Profilter({ metadata, phases, ...props }: Props) {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n      });\n    }\n  };\n\n  return <Profiler onRender={reportProfile} {...props} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { loadServer, DevTools } from \"jira-dev-tool\";\nimport \"antd/dist/antd.less\";\nimport { AppProvider } from \"context\";\nimport Profiler from \"components/profiler\";\n\nloadServer(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProvider>\n        <DevTools />\n        <Profiler id={\"root app\"} phases={[\"mount\", \"update\"]}>\n          <App />\n        </Profiler>\n      </AppProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { User } from \"types/user\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst localStorageKey = \"__auth_provide_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const setToken = (token: string) =>\n  window.localStorage.setItem(localStorageKey, token);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  setToken(user.token || \"\");\n  return user;\n};\n\n/* 登录 */\nexport const login = async (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\n/* 注册 */\nexport const register = async (data: {\n  username: string;\n  password: string;\n}) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import React, { ReactNode, useState } from \"react\";\nimport * as auth from \"auth-provide\";\nimport { User } from \"types/user\";\nimport { http } from \"plugins/request\";\nimport { useAsync, useMount } from \"utils/custom-hook\";\nimport { FullPageLoading, FullPageError } from \"components/lib\";\nimport { useQueryClient } from \"react-query\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\n/* 初始化用户数据 */\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n\n  return user;\n};\n\nconst AuthContext =\n  React.createContext<\n    | {\n        user: User | null;\n        login: (form: AuthForm) => Promise<void>;\n        register: (form: AuthForm) => Promise<void>;\n        logout: () => void;\n      }\n    | undefined\n  >(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n\n  const queryClient = useQueryClient();\n\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  /* 首次加载设置default user */\n  useMount(() => {\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) return <FullPageLoading />;\n\n  if (isError) {\n    return <FullPageError error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n\n  return context;\n};\n","import styled from \"@emotion/styled\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { DevTools } from \"jira-dev-tool\";\n\n/**\n * @prop {} gap: 子元素是否设置 margin-right\n */\nexport const Row = styled.div<{\n  gap?: Number | boolean;\n  between?: boolean;\n  marginBottom?: Number;\n}>`\n  display: flex;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  align-items: center;\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n\n  & > * {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\n/**\n * 全屏加载动画\n */\nconst FullPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size=\"large\" />\n  </FullPage>\n);\n\n/**\n * 全屏错误信息\n */\nexport const FullPageError = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\n/**\n * 包含检测数据类型的错误信息组件\n */\n// 类型守卫:\nconst isError = (value: any): value is Error => value?.message;\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error))\n    return <Typography.Text type=\"danger\">{error?.message}</Typography.Text>;\n  return null;\n};\n\n/** 无padding <Button> */\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\n/* 视图样式容器 */\nexport const ScreenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 3.2rem;\n`;\n"],"sourceRoot":""}