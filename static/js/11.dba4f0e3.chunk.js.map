{"version":3,"sources":["components/pin.tsx","screens/project-list/list.tsx","screens/project-list/search-panel.tsx","screens/project-list/index.tsx"],"names":["Pin","props","checked","onCheckedChange","resetProps","count","value","onChange","num","List","users","refresh","mutate","useEditProject","useProjectsQueryKey","pagination","columns","title","disabled","render","project","pin","id","pinProject","key","sorter","a","b","name","localeCompare","to","dataIndex","find","user","personId","created","dayjs","format","More","edit","useProjectModal","deleteProject","useDeleteProject","overlay","Item","type","onClick","danger","Modal","confirm","okText","cancelText","onOk","SearchPanel","param","setParam","style","marginBottom","layout","e","target","defaultOptionName","options","ProjectList","useDocumentTitle","useUser","data","useProjectsSearchParams","open","useProjects","useDebounce","isLoading","error","list","justify","loading","dataSource"],"mappings":"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","file":"static/js/11.dba4f0e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Rate } from \"antd\";\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n  checked: boolean;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport const Pin = (props: PinProps) => {\r\n  const { checked, onCheckedChange, ...resetProps } = props;\r\n\r\n  return (\r\n    <Rate\r\n      count={1}\r\n      value={checked ? 1 : 0}\r\n      onChange={(num) => onCheckedChange && onCheckedChange(!!num)}\r\n      {...resetProps}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Dropdown, Menu, Table, TableProps, Modal } from \"antd\";\r\nimport { User } from \"types/user\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Pin } from \"components/pin\";\r\nimport { useDeleteProject, useEditProject } from \"api/project\";\r\nimport { ButtonNoPadding } from \"components/lib\";\r\nimport { useProjectModal } from \"utils/project\";\r\nimport { useProjectsQueryKey } from \"./utils\";\r\nimport { Project } from \"types/project\";\r\n\r\ninterface ListProps extends TableProps<Project> {\r\n  users: User[];\r\n  refresh?: () => void;\r\n}\r\n\r\nexport const List = ({ users, refresh, ...props }: ListProps) => {\r\n  const { mutate } = useEditProject(useProjectsQueryKey());\r\n  const pinProject = (id: number, pin: boolean) => mutate({ id, pin });\r\n\r\n  return (\r\n    <Table\r\n      pagination={false}\r\n      columns={[\r\n        {\r\n          title: <Pin checked={true} disabled={true} />,\r\n          render(value, project) {\r\n            return (\r\n              <Pin\r\n                checked={project.pin}\r\n                onCheckedChange={(pin) => pinProject(project.id, pin)}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          key: \"name\",\r\n          sorter: (a, b) => a.name.localeCompare(b.name),\r\n          render(value, project) {\r\n            return <Link to={`${project.id}`}>{project.name}</Link>;\r\n          },\r\n        },\r\n        {\r\n          title: \"部门\",\r\n          key: \"organization\",\r\n          dataIndex: \"organization\",\r\n        },\r\n        {\r\n          title: \"负责人\",\r\n          key: \"personId\",\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {users.find((user) => user.id === project.personId)?.name ||\r\n                  \"未知\"}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"created\",\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {project.created\r\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\r\n                  : \"无\"}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          render(value, project) {\r\n            return <More project={project} />;\r\n          },\r\n        },\r\n      ]}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\n/* 更多操作 */\r\nconst More = ({ project }: { project: Project }) => {\r\n  const { edit } = useProjectModal();\r\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\r\n  const editProject = (id: number) => edit(id);\r\n\r\n  const confirmDelete = (id: number) => {\r\n    Modal.confirm({\r\n      title: `确认删除\"${project.name}\"这个项目吗?`,\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk() {\r\n        deleteProject({ id });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <Menu>\r\n          <Menu.Item key={\"edit\"}>\r\n            <Button type={\"link\"} onClick={() => editProject(project.id)}>\r\n              编辑\r\n            </Button>\r\n          </Menu.Item>\r\n          <Menu.Item key={\"delete\"}>\r\n            <Button\r\n              type={\"link\"}\r\n              danger\r\n              onClick={() => confirmDelete(project.id)}\r\n            >\r\n              删除\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    >\r\n      <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { User } from \"types/user\";\r\nimport { Project } from \"types/project\";\r\n\r\ninterface SearchPanelProps {\r\n  users: User[];\r\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\r\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\r\n}\r\n\r\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\r\n  return (\r\n    <Form style={{ marginBottom: \"2rem\" }} layout=\"inline\">\r\n      <Form.Item>\r\n        <Input\r\n          type=\"text\"\r\n          value={param.name}\r\n          onChange={(e) =>\r\n            setParam({\r\n              ...param,\r\n              name: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <IdSelect\r\n          defaultOptionName={\"负责人\"}\r\n          options={users || []}\r\n          value={param.personId}\r\n          onChange={(value) =>\r\n            setParam({\r\n              ...param,\r\n              personId: value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { List } from \"./list\";\r\nimport { SearchPanel } from \"./search-panel\";\r\nimport { useDebounce, useDocumentTitle } from \"../../utils/custom-hook\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useProjects } from \"api/project\";\r\nimport { Button, Row } from \"antd\";\r\nimport { useUser } from \"api/user\";\r\nimport { useProjectsSearchParams } from \"./utils\";\r\nimport { useProjectModal } from \"utils/project\";\r\nimport { ErrorBox, ScreenContainer } from \"components/lib\";\r\n\r\nconst ProjectList = () => {\r\n  useDocumentTitle(\"项目列表\");\r\n  const { data: users } = useUser();\r\n  const [param, setParam] = useProjectsSearchParams();\r\n  const { open } = useProjectModal();\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    data: list,\r\n    // retry,\r\n  } = useProjects(useDebounce(param, 300));\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <Row justify={\"space-between\"}>\r\n        <h1>项目列表</h1>\r\n        <Button onClick={open}>创建项目</Button>\r\n      </Row>\r\n      <SearchPanel param={param} setParam={setParam} users={users || []} />\r\n      <ErrorBox error={error} />\r\n      <List\r\n        // refresh={retry}\r\n        loading={isLoading}\r\n        dataSource={list || []}\r\n        users={users || []}\r\n      />\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"sourceRoot":""}