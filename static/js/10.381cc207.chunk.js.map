{"version":3,"sources":["screens/board/util.ts","api/task.ts","api/board.ts","assets/bug.svg","assets/task.svg","screens/board/create-task.tsx","components/mark.tsx","components/drag-and-drop.tsx","screens/board/board-column.tsx","screens/board/search-panel.tsx","screens/board/create-board.tsx","screens/board/task-modal.tsx","screens/board/index.tsx"],"names":["useProjectIdInUrl","id","useLocation","pathname","match","Number","useProjectInUrl","useProject","useBoardSearchParams","projectId","useBoardQueryKey","useTasksSearchParams","useUrlQueryParam","params","useMemo","name","typeId","undefined","processorId","tagId","useTasksQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","data","isLoading","edit","useCallback","close","useTasks","param","http","useHttp","debounceParam","cleanObject","useDebounce","useQuery","enabled","useAddTask","queryKey","useMutation","method","useAddConfig","useEditTask","useEditConfig","useDeleteTask","useDeleteConfig","useTaskTypes","useReorderTask","client","useReorderTaskConfig","useBoards","CreateTask","kanbanId","useState","setName","addTask","mutateAsync","inputMode","setInputMode","submit","a","toggleMode","mode","value","placeholder","autoFocus","onBlur","onPressEnter","onChange","e","target","type","onClick","Mark","str","keyword","arr","split","map","index","length","style","color","Drop","children","props","provided","React","isValidElement","cloneElement","droppableProps","ref","innerRef","DropChild","forwardRef","Drag","dragHandleProps","draggableProps","TaskTypeIcon","taskTypes","find","taskType","src","taskIcon","bugIcon","alt","BoardColumn","board","allTasks","tasks","filter","item","Container","align","justify","TaskContainer","direction","droppableId","String","minHeight","task","draggableId","TaskCard","marginBottom","cursor","More","deleteBoard","useDeleteBoard","overlay","Item","danger","Modal","confirm","okText","cancelText","title","onOk","styled","div","SearchPanel","users","useUser","searchParams","setSearchParams","useSetUrlQueryParam","gap","width","defaultOptionName","options","CreateBoard","addBoard","useAddBoard","formItemLayout","labelCol","span","wrapperCol","TaskModal","Form","useForm","form","editTask","edieLoading","deleteTask","getFieldsValue","useEffect","setFieldsValue","visible","forceRender","confirmLoading","onCancel","resetFields","initialValues","label","rules","required","message","then","useDragEnd","BoardScreen","useDocumentTitle","currentProject","boards","boardIsLoading","taskIsLoading","dragEnd","onDragEnd","ColumnsContaier","display","reorderBoard","useReorderBoardConfig","useReorderBoard","mutate","reorderTask","source","destination","console","log","fromId","toId","referenceId","formBoardId","toBoardId","formTask","toTask","fromKanbanId","toKanbanId"],"mappings":"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","file":"static/js/10.381cc207.chunk.js","sourcesContent":["import { useProject } from \"api/project\";\nimport { useTask } from \"api/task\";\nimport { useCallback, useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useUrlQueryParam } from \"utils/custom-hook\";\n\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\n/* 根据 url id 获取 projects */\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\nexport const useBoardSearchParams = () => {\n  return { projectId: useProjectIdInUrl() };\n};\n\n/* 传递给 react-query 的 query 参数 */\nexport const useBoardQueryKey = () => [\"boards\", useBoardSearchParams()];\n\n/* 根据 url id 获取 tasks, url query 和 params */\nexport const useTasksSearchParams = () => {\n  const [params] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\n  const projectId = useProjectIdInUrl();\n\n  return useMemo(() => {\n    return {\n      projectId,\n      name: params.name,\n      typeId: Number(params.typeId) || undefined,\n      processorId: Number(params.processorId) || undefined,\n      tagId: Number(params.tagId) || undefined,\n    };\n  }, [projectId, params]);\n};\n\n/* 传递给 react-query 的 query 参数 */\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\n/* task edit modal status */\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n  /* 开启编辑 */\n  const edit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n  /* 关闭 */\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n\n  return {\n    editingTaskId,\n    editingTask,\n    isLoading,\n    close,\n    edit,\n  };\n};\n","import { useHttp } from \"plugins/request\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { SortProps } from \"types\";\nimport { Task, TaskType } from \"types/task\";\nimport { cleanObject } from \"utils\";\nimport { useDebounce } from \"utils/custom-hook\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  useReorderConfig,\n  useReorderTaskConfig,\n} from \"utils/use-optimistic-option\";\n\n/* task 列表 */\nexport const useTasks = (param?: Partial<Task>) => {\n  const http = useHttp();\n  const debounceParam = cleanObject({\n    ...param,\n    name: useDebounce(param?.name, 200),\n  });\n\n  return useQuery<Task[]>([\"tasks\", debounceParam], () =>\n    http(\"tasks\", { data: debounceParam })\n  );\n};\n\n/* get task detail */\nexport const useTask = (id: number) => {\n  const http = useHttp();\n  return useQuery<Task>([\"tasks\", { id }], () => http(`tasks/${id}`), {\n    enabled: !!id,\n  });\n};\n\n/* 添加 task */\nexport const useAddTask = (queryKey: QueryKey) => {\n  const http = useHttp();\n  return useMutation((params: Partial<Task>) => {\n    return http(\"tasks\", { data: params, method: \"POST\" });\n  }, useAddConfig(queryKey));\n};\n\n/* 更改项目信息 */\nexport const useEditTask = (queryKey: QueryKey) => {\n  const http = useHttp();\n\n  return useMutation(\n    (params: Partial<Task>) =>\n      http(`tasks/${params.id}`, { data: params, method: \"PATCH\" }),\n    useEditConfig(queryKey)\n  );\n};\n\n/* 删除任务 */\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const http = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) => http(`tasks/${id}`, { method: \"DELETE\" }),\n    useDeleteConfig(queryKey)\n  );\n};\n\n/* task type列表 */\nexport const useTaskTypes = () => {\n  const http = useHttp();\n\n  return useQuery<TaskType[]>([\"taskTypes\"], () => http(\"taskTypes\"));\n};\n\n/* 排序 */\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n","import { useHttp } from \"plugins/request\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { SortProps } from \"types\";\nimport { Board } from \"types/board\";\nimport { cleanObject } from \"utils\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderBoardConfig,\n  useReorderConfig,\n} from \"utils/use-optimistic-option\";\n\n/* project 列表 */\nexport const useBoards = (param?: Partial<Board>) => {\n  const http = useHttp();\n\n  return useQuery<Board[]>([\"boards\", cleanObject(param)], () =>\n    http(\"kanbans\", { data: param })\n  );\n};\n\n/* 添加看板 */\nexport const useAddBoard = (queryKey: QueryKey) => {\n  const http = useHttp();\n  return useMutation((params: Partial<Board>) => {\n    return http(\"kanbans\", { data: params, method: \"POST\" });\n  }, useAddConfig(queryKey));\n};\n\n/* 删除看板 */\nexport const useDeleteBoard = (queryKey: QueryKey) => {\n  const http = useHttp();\n  return useMutation(({ id }: { id: number }) => {\n    return http(`kanbans/${id}`, { method: \"DELETE\" });\n  }, useDeleteConfig(queryKey));\n};\n\n/* 排序看板 */\nexport const useReorderBoard = (queryKey: QueryKey) => {\n  const http = useHttp();\n\n  return useMutation((params: SortProps) => {\n    return http(\"kanbans/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderBoardConfig(queryKey));\n};\n","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","import React, { useState } from \"react\";\nimport { Button, Card, Input } from \"antd\";\nimport { useAddTask } from \"api/task\";\nimport { useProjectIdInUrl, useTasksQueryKey } from \"./util\";\n\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\n  const [name, setName] = useState(\"\");\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\n  const projectId = useProjectIdInUrl();\n  const [inputMode, setInputMode] = useState(false);\n\n  const submit = async () => {\n    await addTask({ projectId, name, kanbanId });\n    setInputMode(false);\n    setName(\"\");\n  };\n  /* 切换开关 */\n  const toggleMode = () => setInputMode((mode) => !mode);\n\n  if (!inputMode)\n    return (\n      <Button type={\"link\"} onClick={toggleMode}>\n        +创建任务\n      </Button>\n    );\n\n  return (\n    <Card>\n      <Input\n        value={name}\n        placeholder={\"请输入任务名称\"}\n        autoFocus\n        onBlur={toggleMode}\n        onPressEnter={submit}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Card>\n  );\n};\n","import React from \"react\";\n\n/* 关键字高亮 */\nexport const Mark = ({ str, keyword }: { str: string; keyword: string }) => {\n  if (!keyword) return <>{str}</>;\n\n  const arr = str.split(keyword);\n  return (\n    <>\n      {arr.map((str, index) => {\n        return (\n          <span key={index}>\n            {str}\n            {index !== arr.length - 1 && (\n              <span style={{ color: \"red\" }}>{keyword}</span>\n            )}\n          </span>\n        );\n      })}\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport {\n  Droppable,\n  DroppableProps,\n  Draggable,\n  DraggableProps,\n  DroppableProvided,\n  DroppableProvidedProps,\n} from \"react-beautiful-dnd\";\n\n/* 可放置组件 */\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\nexport const Drop = ({ children, ...props }: DropProps) => {\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n\n/* 可放置组件子组件 */\ntype DropChildProps = Partial<\n  { provided: DroppableProvided } & DroppableProvidedProps\n> &\n  React.HTMLAttributes<HTMLDivElement>;\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => {\n    return (\n      <div ref={ref} {...props}>\n        {children}\n        {props.provided?.placeholder}\n      </div>\n    );\n  }\n);\n\n/* 可拖拽组件 */\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.dragHandleProps,\n            ...provided.draggableProps,\n            ref: provided.innerRef,\n          });\n        }\n\n        return <div />;\n      }}\n    </Draggable>\n  );\n};\n","import { useEditTask, useTasks, useTaskTypes } from \"api/task\";\nimport React from \"react\";\nimport { Board } from \"types/board\";\nimport { useBoardQueryKey, useTaskModal, useTasksSearchParams } from \"./util\";\nimport taskIcon from \"assets/bug.svg\";\nimport bugIcon from \"assets/task.svg\";\nimport styled from \"@emotion/styled\";\nimport { Button, Card, Dropdown, Menu, Modal, Row } from \"antd\";\nimport { CreateTask } from \"./create-task\";\nimport { Mark } from \"components/mark\";\nimport { Task } from \"types/task\";\nimport { useDeleteBoard } from \"api/board\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n\n  if (!name) return null;\n  return <img src={name === \"task\" ? taskIcon : bugIcon} alt=\"\" />;\n};\n\nexport const BoardColumn = React.forwardRef<HTMLDivElement, { board: Board }>(\n  ({ board, ...props }, ref) => {\n    const { data: allTasks } = useTasks(useTasksSearchParams());\n    const tasks = allTasks?.filter((item) => item.kanbanId === board.id);\n\n    return (\n      <Container ref={ref} {...props}>\n        <Row align={\"middle\"} justify={\"space-between\"}>\n          <h3>{board.name}</h3>\n          <More board={board} />\n        </Row>\n        <TaskContainer>\n          <Drop\n            type={\"ROW\"}\n            direction={\"vertical\"}\n            droppableId={String(board.id)}\n          >\n            <DropChild style={{ minHeight: \".5rem\" }}>\n              {tasks?.map((task, index) => (\n                <Drag\n                  draggableId={\"task\" + task.id}\n                  key={task.id}\n                  index={index}\n                >\n                  <div>\n                    <TaskCard key={task.id} task={task} />\n                  </div>\n                </Drag>\n              ))}\n            </DropChild>\n          </Drop>\n          <CreateTask kanbanId={board.id} />\n        </TaskContainer>\n      </Container>\n    );\n  }\n);\n\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { edit } = useTaskModal();\n  const { name } = useTasksSearchParams();\n  return (\n    <Card\n      key={task.id}\n      style={{ marginBottom: \".5rem\", cursor: \"pointer\" }}\n      onClick={() => edit(task.id)}\n    >\n      <Row align={\"middle\"}>\n        <Mark str={task.name} keyword={name}></Mark>\n        <TaskTypeIcon id={task.typeId} />\n      </Row>\n    </Card>\n  );\n};\n\n/* 更多功能小组件 */\nconst More = ({ board }: { board: Board }) => {\n  const { mutateAsync: deleteBoard } = useDeleteBoard(useBoardQueryKey());\n  const handleDelete = () => {\n    Modal.confirm({\n      okText: \"确认\",\n      cancelText: \"取消\",\n      title: `确定删除${board.name}看板吗?`,\n      onOk() {\n        return deleteBoard({ id: board.id });\n      },\n    });\n  };\n\n  const overlay = (\n    <Menu>\n      <Menu.Item key={\"delete\"}>\n        <Button type=\"link\" danger onClick={handleDelete}>\n          删除\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 27rem;\n  border-radius: 4px;\n  background-color: rgb(246, 245, 245);\n  padding: 0.6rem 0.6rem 1rem;\n  margin-right: 0.5rem;\n`;\n\nconst TaskContainer = styled.div`\n  overflow: auto;\n  flex: 1;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import React from \"react\";\nimport { Row } from \"components/lib\";\nimport { useSetUrlQueryParam } from \"utils/custom-hook\";\nimport { useTasksSearchParams } from \"./util\";\nimport { Button, Input } from \"antd\";\nimport { IdSelect } from \"components/id-select\";\nimport { useUser } from \"api/user\";\nimport { useTaskTypes } from \"api/task\";\n\n/* 看板 - 任务筛选 */\nexport const SearchPanel = () => {\n  const { data: users } = useUser();\n  const { data: taskTypes } = useTaskTypes();\n  const searchParams = useTasksSearchParams();\n  const setSearchParams = useSetUrlQueryParam();\n\n  const reset = () => {\n    setSearchParams({\n      typeId: undefined,\n      processorId: undefined,\n      tagId: undefined,\n      name: undefined,\n    });\n  };\n\n  return (\n    <Row marginBottom={2} gap>\n      <Input\n        style={{ width: \"20rem\" }}\n        placeholder={\"任务名\"}\n        value={searchParams.name}\n        onChange={(e) => setSearchParams({ name: e.target.value })}\n      />\n\n      <IdSelect\n        defaultOptionName={\"经办人\"}\n        value={searchParams.processorId}\n        options={users || []}\n        onChange={(value) => setSearchParams({ processorId: value })}\n      />\n\n      <IdSelect\n        defaultOptionName={\"类型\"}\n        value={searchParams.typeId}\n        options={taskTypes || []}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n\n      <Button onClick={reset}>重置</Button>\n    </Row>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useBoardQueryKey, useProjectIdInUrl } from \"./util\";\nimport { Container } from \"screens/board/board-column\";\nimport { Input } from \"antd\";\nimport { useAddBoard } from \"api/board\";\n\n/* 创建看板 */\nexport const CreateBoard = React.forwardRef((props: any, ref: any) => {\n  const [name, setName] = useState(\"\");\n  const projectId = useProjectIdInUrl();\n  const { mutateAsync: addBoard } = useAddBoard(useBoardQueryKey());\n\n  const submit = async () => {\n    await addBoard({ name, projectId });\n    setName(\"\");\n  };\n\n  return (\n    <Container ref={ref}>\n      <Input\n        value={name}\n        placeholder={\"新建看板名称\"}\n        onPressEnter={submit}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Container>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport { Button, Form, Input, Modal, Row } from \"antd\";\nimport { useTaskModal, useTasksQueryKey } from \"./util\";\nimport { useDeleteTask, useEditTask, useTaskTypes } from \"api/task\";\nimport { IdSelect } from \"components/id-select\";\nimport { useUser } from \"api/user\";\n\nconst formItemLayout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 18 },\n};\n\nexport const TaskModal = () => {\n  const { data: users } = useUser();\n  const { data: taskTypes } = useTaskTypes();\n\n  const [form] = Form.useForm();\n  const { editingTask, editingTaskId, close } = useTaskModal();\n  const { mutateAsync: editTask, isLoading: edieLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey());\n\n  const onClose = () => {\n    close();\n    form.resetFields();\n  };\n\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n\n  const handleDelete = () => {\n    Modal.confirm({\n      okText: \"确认\",\n      cancelText: \"取消\",\n      title: `确定删除任务吗?`,\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) }).then(close);\n      },\n    });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(editingTask);\n  }, [form, editingTask]);\n\n  return (\n    <Modal\n      visible={!!editingTaskId}\n      title={\"编辑任务\"}\n      forceRender\n      okText={\"确定\"}\n      cancelText={\"取消\"}\n      confirmLoading={edieLoading}\n      onCancel={onClose}\n      onOk={onOk}\n    >\n      <Form initialValues={editingTask} form={form} {...formItemLayout}>\n        <Form.Item\n          label={\"任务名\"}\n          name={\"name\"}\n          rules={[{ required: true, message: \"请输入任务名\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\n          <IdSelect defaultOptionName={\"经办人\"} options={users || []} />\n        </Form.Item>\n\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\n          <IdSelect defaultOptionName={\"类型\"} options={taskTypes || []} />\n        </Form.Item>\n\n        <Row justify={\"end\"} align={\"middle\"}>\n          <Button type={\"link\"} danger onClick={handleDelete}>\n            删除\n          </Button>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useBoards, useReorderBoard } from \"api/board\";\nimport { FullPageLoading, ScreenContainer } from \"components/lib\";\nimport { useLocation, useParams } from \"react-router\";\nimport { useDocumentTitle } from \"utils/custom-hook\";\nimport { BoardColumn } from \"./board-column\";\nimport { SearchPanel } from \"./search-panel\";\nimport {\n  useBoardQueryKey,\n  useBoardSearchParams,\n  useProjectInUrl,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"./util\";\nimport { useReorderTask, useTasks } from \"api/task\";\nimport { CreateBoard } from \"./create-board\";\nimport { TaskModal } from \"./task-modal\";\nimport {\n  DragDropContext,\n  DropResult,\n  /* Droppable,\n  Draggable */\n} from \"react-beautiful-dnd\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\n\nconst BoardScreen = () => {\n  useDocumentTitle(\"看板列表\");\n  const { data: currentProject } = useProjectInUrl();\n  const { data: boards, isLoading: boardIsLoading } = useBoards(\n    useBoardSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\n  const isLoading = boardIsLoading || taskIsLoading;\n  const dragEnd = useDragEnd();\n\n  return (\n    <ScreenContainer>\n      <DragDropContext onDragEnd={dragEnd}>\n        <h1>{currentProject?.name}看板</h1>\n        <SearchPanel />\n        {isLoading ? (\n          <FullPageLoading />\n        ) : (\n          /* 不使用封装好的组件实现 */\n          <ColumnsContaier>\n            {/* <Droppable droppableId={\"board\"} type={\"COLUMN\"} direction={\"horizontal\"}>\n              {\n                provided => (\n                  <div style={{ display: \"flex\" }} ref={provided.innerRef} {...provided.droppableProps}>\n                    {\n                      boards?.map((item, index) => {\n                        return (\n                          <Draggable draggableId={\"board\" + index} index={index} key={index}>\n                            {\n                              provided => (\n                                <BoardColumn ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} board={item} key={item.id} />\n                              )\n                            }\n                          </Draggable>\n                        )\n                      })\n                    }\n                  </div>\n                )\n              }\n            </Droppable>\n            <CreateBoard /> */}\n            <Drop\n              type={\"COLUMN\"}\n              direction={\"horizontal\"}\n              droppableId={\"board\"}\n            >\n              <DropChild style={{ display: \"flex\" }}>\n                {boards?.map((board, index) => {\n                  return (\n                    <Drag\n                      draggableId={\"board\" + board.id}\n                      index={index}\n                      key={board.id}\n                    >\n                      <BoardColumn board={board} key={board.id} />\n                    </Drag>\n                  );\n                })}\n              </DropChild>\n            </Drop>\n            <CreateBoard />\n          </ColumnsContaier>\n        )}\n        <TaskModal />\n      </DragDropContext>\n    </ScreenContainer>\n  );\n};\n\nexport default BoardScreen;\n\n/* 拖拽完成 */\nconst useDragEnd = () => {\n  const { data: boards } = useBoards(useBoardSearchParams());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n  const { mutate: reorderBoard } = useReorderBoard(useBoardQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      console.log({ source, destination, type });\n      if (!destination) return;\n\n      // 看板排序\n      if (type === \"COLUMN\") {\n        const fromId = boards?.[source.index].id;\n        const toId = boards?.[destination.index].id;\n\n        if (!fromId || !toId || fromId === toId) return;\n\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderBoard({ fromId, referenceId: toId, type });\n      }\n\n      // 任务排序\n      if (type === \"ROW\") {\n        const formBoardId = +source.droppableId;\n        const toBoardId = +destination.droppableId;\n\n        const formTask = allTasks?.filter(\n          (item) => item.kanbanId === formBoardId\n        )[source.index];\n        const toTask = allTasks?.filter((item) => item.kanbanId === toBoardId)[\n          destination.index\n        ];\n\n        // 无位移\n        if (formTask?.id === toTask?.id) return;\n\n        const type =\n          formBoardId === toBoardId && destination.index > source.index\n            ? \"after\"\n            : \"before\";\n        reorderTask({\n          fromId: formTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId: Number(formBoardId),\n          toKanbanId: Number(toBoardId),\n          type: type,\n        });\n      }\n    },\n    [boards, allTasks, reorderBoard, reorderTask]\n  );\n};\n\nconst ColumnsContaier = styled.div`\n  flex: 1;\n  display: flex;\n  overflow: auto;\n  margin-right: 2rem;\n`;\n"],"sourceRoot":""}