{"version":3,"sources":["screens/board/util.ts","api/task.ts","api/board.ts","assets/bug.svg","assets/task.svg","screens/board/create-task.tsx","components/mark.tsx","components/drag-and-drop.tsx","screens/board/board-column.tsx","screens/board/search-panel.tsx","screens/board/create-board.tsx","screens/board/task-modal.tsx","screens/board/index.tsx"],"names":["useProjectIdInUrl","id","useLocation","pathname","match","Number","useProjectInUrl","useProject","useBoardSearchParams","projectId","useBoardQueryKey","useTasksSearchParams","useUrlQueryParam","params","useMemo","name","typeId","undefined","processorId","tagId","useTasksQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","data","isLoading","edit","useCallback","close","useTasks","param","http","useHttp","debounceParam","cleanObject","useDebounce","useQuery","enabled","useAddTask","queryKey","useMutation","method","useAddConfig","useEditTask","useEditConfig","useDeleteTask","useDeleteConfig","useTaskTypes","useReorderTask","client","useReorderTaskConfig","useBoards","CreateTask","kanbanId","useState","setName","addTask","mutateAsync","inputMode","setInputMode","submit","a","toggleMode","mode","value","placeholder","autoFocus","onBlur","onPressEnter","onChange","e","target","type","onClick","Mark","str","keyword","arr","split","map","index","length","style","color","Drop","children","props","provided","React","isValidElement","cloneElement","droppableProps","ref","innerRef","DropChild","forwardRef","Drag","dragHandleProps","draggableProps","TaskTypeIcon","taskTypes","find","taskType","src","taskIcon","bugIcon","alt","BoardColumn","board","allTasks","tasks","filter","item","Container","align","justify","TaskContainer","direction","droppableId","String","minHeight","task","draggableId","TaskCard","marginBottom","cursor","More","deleteBoard","useDeleteBoard","overlay","Item","danger","Modal","confirm","okText","cancelText","title","onOk","styled","div","SearchPanel","users","useUser","searchParams","setSearchParams","useSetUrlQueryParam","gap","width","defaultOptionName","options","CreateBoard","addBoard","useAddBoard","formItemLayout","labelCol","span","wrapperCol","TaskModal","Form","useForm","form","editTask","edieLoading","deleteTask","getFieldsValue","useEffect","setFieldsValue","visible","forceRender","confirmLoading","onCancel","resetFields","initialValues","label","rules","required","message","then","useDragEnd","BoardScreen","useDocumentTitle","currentProject","boards","boardIsLoading","taskIsLoading","dragEnd","onDragEnd","ColumnsContaier","display","reorderBoard","useReorderBoardConfig","useReorderBoard","mutate","reorderTask","source","destination","console","log","fromId","toId","referenceId","formBoardId","toBoardId","formTask","toTask","fromKanbanId","toKanbanId"],"mappings":"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","file":"static/js/10.43a20ea9.chunk.js","sourcesContent":["import { useProject } from \"api/project\";\r\nimport { useTask } from \"api/task\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useUrlQueryParam } from \"utils/custom-hook\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n  const { pathname } = useLocation();\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n  return Number(id);\r\n};\r\n\r\n/* 根据 url id 获取 projects */\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\r\n\r\nexport const useBoardSearchParams = () => {\r\n  return { projectId: useProjectIdInUrl() };\r\n};\r\n\r\n/* 传递给 react-query 的 query 参数 */\r\nexport const useBoardQueryKey = () => [\"boards\", useBoardSearchParams()];\r\n\r\n/* 根据 url id 获取 tasks, url query 和 params */\r\nexport const useTasksSearchParams = () => {\r\n  const [params] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\r\n  const projectId = useProjectIdInUrl();\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      projectId,\r\n      name: params.name,\r\n      typeId: Number(params.typeId) || undefined,\r\n      processorId: Number(params.processorId) || undefined,\r\n      tagId: Number(params.tagId) || undefined,\r\n    };\r\n  }, [projectId, params]);\r\n};\r\n\r\n/* 传递给 react-query 的 query 参数 */\r\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\r\n\r\n/* task edit modal status */\r\nexport const useTaskModal = () => {\r\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\r\n    \"editingTaskId\",\r\n  ]);\r\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\r\n  /* 开启编辑 */\r\n  const edit = useCallback(\r\n    (id: number) => {\r\n      setEditingTaskId({ editingTaskId: id });\r\n    },\r\n    [setEditingTaskId]\r\n  );\r\n  /* 关闭 */\r\n  const close = useCallback(() => {\r\n    setEditingTaskId({ editingTaskId: \"\" });\r\n  }, [setEditingTaskId]);\r\n\r\n  return {\r\n    editingTaskId,\r\n    editingTask,\r\n    isLoading,\r\n    close,\r\n    edit,\r\n  };\r\n};\r\n","import { useHttp } from \"plugins/request\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { SortProps } from \"types\";\r\nimport { Task, TaskType } from \"types/task\";\r\nimport { cleanObject } from \"utils\";\r\nimport { useDebounce } from \"utils/custom-hook\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n  useReorderConfig,\r\n  useReorderTaskConfig,\r\n} from \"utils/use-optimistic-option\";\r\n\r\n/* task 列表 */\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n  const http = useHttp();\r\n  const debounceParam = cleanObject({\r\n    ...param,\r\n    name: useDebounce(param?.name, 200),\r\n  });\r\n\r\n  return useQuery<Task[]>([\"tasks\", debounceParam], () =>\r\n    http(\"tasks\", { data: debounceParam })\r\n  );\r\n};\r\n\r\n/* get task detail */\r\nexport const useTask = (id: number) => {\r\n  const http = useHttp();\r\n  return useQuery<Task>([\"tasks\", { id }], () => http(`tasks/${id}`), {\r\n    enabled: !!id,\r\n  });\r\n};\r\n\r\n/* 添加 task */\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n  return useMutation((params: Partial<Task>) => {\r\n    return http(\"tasks\", { data: params, method: \"POST\" });\r\n  }, useAddConfig(queryKey));\r\n};\r\n\r\n/* 更改项目信息 */\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      http(`tasks/${params.id}`, { data: params, method: \"PATCH\" }),\r\n    useEditConfig(queryKey)\r\n  );\r\n};\r\n\r\n/* 删除任务 */\r\nexport const useDeleteTask = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n  return useMutation(\r\n    ({ id }: { id: number }) => http(`tasks/${id}`, { method: \"DELETE\" }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n\r\n/* task type列表 */\r\nexport const useTaskTypes = () => {\r\n  const http = useHttp();\r\n\r\n  return useQuery<TaskType[]>([\"taskTypes\"], () => http(\"taskTypes\"));\r\n};\r\n\r\n/* 排序 */\r\nexport const useReorderTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation((params: SortProps) => {\r\n    return client(\"tasks/reorder\", {\r\n      data: params,\r\n      method: \"POST\",\r\n    });\r\n  }, useReorderTaskConfig(queryKey));\r\n};\r\n","import { useHttp } from \"plugins/request\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { SortProps } from \"types\";\r\nimport { Board } from \"types/board\";\r\nimport { cleanObject } from \"utils\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useReorderBoardConfig,\r\n  useReorderConfig,\r\n} from \"utils/use-optimistic-option\";\r\n\r\n/* project 列表 */\r\nexport const useBoards = (param?: Partial<Board>) => {\r\n  const http = useHttp();\r\n\r\n  return useQuery<Board[]>([\"boards\", cleanObject(param)], () =>\r\n    http(\"kanbans\", { data: param })\r\n  );\r\n};\r\n\r\n/* 添加看板 */\r\nexport const useAddBoard = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n  return useMutation((params: Partial<Board>) => {\r\n    return http(\"kanbans\", { data: params, method: \"POST\" });\r\n  }, useAddConfig(queryKey));\r\n};\r\n\r\n/* 删除看板 */\r\nexport const useDeleteBoard = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n  return useMutation(({ id }: { id: number }) => {\r\n    return http(`kanbans/${id}`, { method: \"DELETE\" });\r\n  }, useDeleteConfig(queryKey));\r\n};\r\n\r\n/* 排序看板 */\r\nexport const useReorderBoard = (queryKey: QueryKey) => {\r\n  const http = useHttp();\r\n\r\n  return useMutation((params: SortProps) => {\r\n    return http(\"kanbans/reorder\", {\r\n      data: params,\r\n      method: \"POST\",\r\n    });\r\n  }, useReorderBoardConfig(queryKey));\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","import React, { useState } from \"react\";\r\nimport { Button, Card, Input } from \"antd\";\r\nimport { useAddTask } from \"api/task\";\r\nimport { useProjectIdInUrl, useTasksQueryKey } from \"./util\";\r\n\r\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\r\n  const projectId = useProjectIdInUrl();\r\n  const [inputMode, setInputMode] = useState(false);\r\n\r\n  const submit = async () => {\r\n    await addTask({ projectId, name, kanbanId });\r\n    setInputMode(false);\r\n    setName(\"\");\r\n  };\r\n  /* 切换开关 */\r\n  const toggleMode = () => setInputMode((mode) => !mode);\r\n\r\n  if (!inputMode)\r\n    return (\r\n      <Button type={\"link\"} onClick={toggleMode}>\r\n        +创建任务\r\n      </Button>\r\n    );\r\n\r\n  return (\r\n    <Card>\r\n      <Input\r\n        value={name}\r\n        placeholder={\"请输入任务名称\"}\r\n        autoFocus\r\n        onBlur={toggleMode}\r\n        onPressEnter={submit}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\n/* 关键字高亮 */\r\nexport const Mark = ({ str, keyword }: { str: string; keyword: string }) => {\r\n  if (!keyword) return <>{str}</>;\r\n\r\n  const arr = str.split(keyword);\r\n  return (\r\n    <>\r\n      {arr.map((str, index) => {\r\n        return (\r\n          <span key={index}>\r\n            {str}\r\n            {index !== arr.length - 1 && (\r\n              <span style={{ color: \"red\" }}>{keyword}</span>\r\n            )}\r\n          </span>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Droppable,\r\n  DroppableProps,\r\n  Draggable,\r\n  DraggableProps,\r\n  DroppableProvided,\r\n  DroppableProvidedProps,\r\n} from \"react-beautiful-dnd\";\r\n\r\n/* 可放置组件 */\r\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\r\nexport const Drop = ({ children, ...props }: DropProps) => {\r\n  return (\r\n    <Droppable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.droppableProps,\r\n            ref: provided.innerRef,\r\n            provided,\r\n          });\r\n        }\r\n\r\n        return <div />;\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\n/* 可放置组件子组件 */\r\ntype DropChildProps = Partial<\r\n  { provided: DroppableProvided } & DroppableProvidedProps\r\n> &\r\n  React.HTMLAttributes<HTMLDivElement>;\r\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\r\n  ({ children, ...props }, ref) => {\r\n    return (\r\n      <div ref={ref} {...props}>\r\n        {children}\r\n        {props.provided?.placeholder}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\n/* 可拖拽组件 */\r\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\r\nexport const Drag = ({ children, ...props }: DragProps) => {\r\n  return (\r\n    <Draggable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.dragHandleProps,\r\n            ...provided.draggableProps,\r\n            ref: provided.innerRef,\r\n          });\r\n        }\r\n\r\n        return <div />;\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n","import { useEditTask, useTasks, useTaskTypes } from \"api/task\";\r\nimport React from \"react\";\r\nimport { Board } from \"types/board\";\r\nimport { useBoardQueryKey, useTaskModal, useTasksSearchParams } from \"./util\";\r\nimport taskIcon from \"assets/bug.svg\";\r\nimport bugIcon from \"assets/task.svg\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Button, Card, Dropdown, Menu, Modal, Row } from \"antd\";\r\nimport { CreateTask } from \"./create-task\";\r\nimport { Mark } from \"components/mark\";\r\nimport { Task } from \"types/task\";\r\nimport { useDeleteBoard } from \"api/board\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\n\r\nconst TaskTypeIcon = ({ id }: { id: number }) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\r\n\r\n  if (!name) return null;\r\n  return <img src={name === \"task\" ? taskIcon : bugIcon} alt=\"\" />;\r\n};\r\n\r\nexport const BoardColumn = React.forwardRef<HTMLDivElement, { board: Board }>(\r\n  ({ board, ...props }, ref) => {\r\n    const { data: allTasks } = useTasks(useTasksSearchParams());\r\n    const tasks = allTasks?.filter((item) => item.kanbanId === board.id);\r\n\r\n    return (\r\n      <Container ref={ref} {...props}>\r\n        <Row align={\"middle\"} justify={\"space-between\"}>\r\n          <h3>{board.name}</h3>\r\n          <More board={board} />\r\n        </Row>\r\n        <TaskContainer>\r\n          <Drop\r\n            type={\"ROW\"}\r\n            direction={\"vertical\"}\r\n            droppableId={String(board.id)}\r\n          >\r\n            <DropChild style={{ minHeight: \".5rem\" }}>\r\n              {tasks?.map((task, index) => (\r\n                <Drag\r\n                  draggableId={\"task\" + task.id}\r\n                  key={task.id}\r\n                  index={index}\r\n                >\r\n                  <div>\r\n                    <TaskCard key={task.id} task={task} />\r\n                  </div>\r\n                </Drag>\r\n              ))}\r\n            </DropChild>\r\n          </Drop>\r\n          <CreateTask kanbanId={board.id} />\r\n        </TaskContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nconst TaskCard = ({ task }: { task: Task }) => {\r\n  const { edit } = useTaskModal();\r\n  const { name } = useTasksSearchParams();\r\n  return (\r\n    <Card\r\n      key={task.id}\r\n      style={{ marginBottom: \".5rem\", cursor: \"pointer\" }}\r\n      onClick={() => edit(task.id)}\r\n    >\r\n      <Row align={\"middle\"}>\r\n        <Mark str={task.name} keyword={name}></Mark>\r\n        <TaskTypeIcon id={task.typeId} />\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\n/* 更多功能小组件 */\r\nconst More = ({ board }: { board: Board }) => {\r\n  const { mutateAsync: deleteBoard } = useDeleteBoard(useBoardQueryKey());\r\n  const handleDelete = () => {\r\n    Modal.confirm({\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      title: `确定删除${board.name}看板吗?`,\r\n      onOk() {\r\n        return deleteBoard({ id: board.id });\r\n      },\r\n    });\r\n  };\r\n\r\n  const overlay = (\r\n    <Menu>\r\n      <Menu.Item key={\"delete\"}>\r\n        <Button type=\"link\" danger onClick={handleDelete}>\r\n          删除\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={overlay}>\r\n      <Button type={\"link\"}>...</Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 27rem;\r\n  border-radius: 4px;\r\n  background-color: rgb(246, 245, 245);\r\n  padding: 0.6rem 0.6rem 1rem;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst TaskContainer = styled.div`\r\n  overflow: auto;\r\n  flex: 1;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Row } from \"components/lib\";\r\nimport { useSetUrlQueryParam } from \"utils/custom-hook\";\r\nimport { useTasksSearchParams } from \"./util\";\r\nimport { Button, Input } from \"antd\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { useUser } from \"api/user\";\r\nimport { useTaskTypes } from \"api/task\";\r\n\r\n/* 看板 - 任务筛选 */\r\nexport const SearchPanel = () => {\r\n  const { data: users } = useUser();\r\n  const { data: taskTypes } = useTaskTypes();\r\n  const searchParams = useTasksSearchParams();\r\n  const setSearchParams = useSetUrlQueryParam();\r\n\r\n  const reset = () => {\r\n    setSearchParams({\r\n      typeId: undefined,\r\n      processorId: undefined,\r\n      tagId: undefined,\r\n      name: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row marginBottom={2} gap>\r\n      <Input\r\n        style={{ width: \"20rem\" }}\r\n        placeholder={\"任务名\"}\r\n        value={searchParams.name}\r\n        onChange={(e) => setSearchParams({ name: e.target.value })}\r\n      />\r\n\r\n      <IdSelect\r\n        defaultOptionName={\"经办人\"}\r\n        value={searchParams.processorId}\r\n        options={users || []}\r\n        onChange={(value) => setSearchParams({ processorId: value })}\r\n      />\r\n\r\n      <IdSelect\r\n        defaultOptionName={\"类型\"}\r\n        value={searchParams.typeId}\r\n        options={taskTypes || []}\r\n        onChange={(value) => setSearchParams({ typeId: value })}\r\n      />\r\n\r\n      <Button onClick={reset}>重置</Button>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useBoardQueryKey, useProjectIdInUrl } from \"./util\";\r\nimport { Container } from \"screens/board/board-column\";\r\nimport { Input } from \"antd\";\r\nimport { useAddBoard } from \"api/board\";\r\n\r\n/* 创建看板 */\r\nexport const CreateBoard = React.forwardRef((props: any, ref: any) => {\r\n  const [name, setName] = useState(\"\");\r\n  const projectId = useProjectIdInUrl();\r\n  const { mutateAsync: addBoard } = useAddBoard(useBoardQueryKey());\r\n\r\n  const submit = async () => {\r\n    await addBoard({ name, projectId });\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <Input\r\n        value={name}\r\n        placeholder={\"新建看板名称\"}\r\n        onPressEnter={submit}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n    </Container>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Form, Input, Modal, Row } from \"antd\";\r\nimport { useTaskModal, useTasksQueryKey } from \"./util\";\r\nimport { useDeleteTask, useEditTask, useTaskTypes } from \"api/task\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { useUser } from \"api/user\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 18 },\r\n};\r\n\r\nexport const TaskModal = () => {\r\n  const { data: users } = useUser();\r\n  const { data: taskTypes } = useTaskTypes();\r\n\r\n  const [form] = Form.useForm();\r\n  const { editingTask, editingTaskId, close } = useTaskModal();\r\n  const { mutateAsync: editTask, isLoading: edieLoading } = useEditTask(\r\n    useTasksQueryKey()\r\n  );\r\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey());\r\n\r\n  const onClose = () => {\r\n    close();\r\n    form.resetFields();\r\n  };\r\n\r\n  const onOk = async () => {\r\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\r\n    close();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    Modal.confirm({\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      title: `确定删除任务吗?`,\r\n      onOk() {\r\n        return deleteTask({ id: Number(editingTaskId) }).then(close);\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingTask);\r\n  }, [form, editingTask]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={!!editingTaskId}\r\n      title={\"编辑任务\"}\r\n      forceRender\r\n      okText={\"确定\"}\r\n      cancelText={\"取消\"}\r\n      confirmLoading={edieLoading}\r\n      onCancel={onClose}\r\n      onOk={onOk}\r\n    >\r\n      <Form initialValues={editingTask} form={form} {...formItemLayout}>\r\n        <Form.Item\r\n          label={\"任务名\"}\r\n          name={\"name\"}\r\n          rules={[{ required: true, message: \"请输入任务名\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\r\n          <IdSelect defaultOptionName={\"经办人\"} options={users || []} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\r\n          <IdSelect defaultOptionName={\"类型\"} options={taskTypes || []} />\r\n        </Form.Item>\r\n\r\n        <Row justify={\"end\"} align={\"middle\"}>\r\n          <Button type={\"link\"} danger onClick={handleDelete}>\r\n            删除\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useBoards, useReorderBoard } from \"api/board\";\r\nimport { FullPageLoading, ScreenContainer } from \"components/lib\";\r\nimport { useLocation, useParams } from \"react-router\";\r\nimport { useDocumentTitle } from \"utils/custom-hook\";\r\nimport { BoardColumn } from \"./board-column\";\r\nimport { SearchPanel } from \"./search-panel\";\r\nimport {\r\n  useBoardQueryKey,\r\n  useBoardSearchParams,\r\n  useProjectInUrl,\r\n  useTasksQueryKey,\r\n  useTasksSearchParams,\r\n} from \"./util\";\r\nimport { useReorderTask, useTasks } from \"api/task\";\r\nimport { CreateBoard } from \"./create-board\";\r\nimport { TaskModal } from \"./task-modal\";\r\nimport {\r\n  DragDropContext,\r\n  DropResult,\r\n  /* Droppable,\r\n  Draggable */\r\n} from \"react-beautiful-dnd\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\n\r\nconst BoardScreen = () => {\r\n  useDocumentTitle(\"看板列表\");\r\n  const { data: currentProject } = useProjectInUrl();\r\n  const { data: boards, isLoading: boardIsLoading } = useBoards(\r\n    useBoardSearchParams()\r\n  );\r\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\r\n  const isLoading = boardIsLoading || taskIsLoading;\r\n  const dragEnd = useDragEnd();\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <DragDropContext onDragEnd={dragEnd}>\r\n        <h1>{currentProject?.name}看板</h1>\r\n        <SearchPanel />\r\n        {isLoading ? (\r\n          <FullPageLoading />\r\n        ) : (\r\n          /* 不使用封装好的组件实现 */\r\n          <ColumnsContaier>\r\n            {/* <Droppable droppableId={\"board\"} type={\"COLUMN\"} direction={\"horizontal\"}>\r\n              {\r\n                provided => (\r\n                  <div style={{ display: \"flex\" }} ref={provided.innerRef} {...provided.droppableProps}>\r\n                    {\r\n                      boards?.map((item, index) => {\r\n                        return (\r\n                          <Draggable draggableId={\"board\" + index} index={index} key={index}>\r\n                            {\r\n                              provided => (\r\n                                <BoardColumn ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} board={item} key={item.id} />\r\n                              )\r\n                            }\r\n                          </Draggable>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                )\r\n              }\r\n            </Droppable>\r\n            <CreateBoard /> */}\r\n            <Drop\r\n              type={\"COLUMN\"}\r\n              direction={\"horizontal\"}\r\n              droppableId={\"board\"}\r\n            >\r\n              <DropChild style={{ display: \"flex\" }}>\r\n                {boards?.map((board, index) => {\r\n                  return (\r\n                    <Drag\r\n                      draggableId={\"board\" + board.id}\r\n                      index={index}\r\n                      key={board.id}\r\n                    >\r\n                      <BoardColumn board={board} key={board.id} />\r\n                    </Drag>\r\n                  );\r\n                })}\r\n              </DropChild>\r\n            </Drop>\r\n            <CreateBoard />\r\n          </ColumnsContaier>\r\n        )}\r\n        <TaskModal />\r\n      </DragDropContext>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nexport default BoardScreen;\r\n\r\n/* 拖拽完成 */\r\nconst useDragEnd = () => {\r\n  const { data: boards } = useBoards(useBoardSearchParams());\r\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\r\n  const { mutate: reorderBoard } = useReorderBoard(useBoardQueryKey());\r\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\r\n\r\n  return useCallback(\r\n    ({ source, destination, type }: DropResult) => {\r\n      console.log({ source, destination, type });\r\n      if (!destination) return;\r\n\r\n      // 看板排序\r\n      if (type === \"COLUMN\") {\r\n        const fromId = boards?.[source.index].id;\r\n        const toId = boards?.[destination.index].id;\r\n\r\n        if (!fromId || !toId || fromId === toId) return;\r\n\r\n        const type = destination.index > source.index ? \"after\" : \"before\";\r\n        reorderBoard({ fromId, referenceId: toId, type });\r\n      }\r\n\r\n      // 任务排序\r\n      if (type === \"ROW\") {\r\n        const formBoardId = +source.droppableId;\r\n        const toBoardId = +destination.droppableId;\r\n\r\n        const formTask = allTasks?.filter(\r\n          (item) => item.kanbanId === formBoardId\r\n        )[source.index];\r\n        const toTask = allTasks?.filter((item) => item.kanbanId === toBoardId)[\r\n          destination.index\r\n        ];\r\n\r\n        // 无位移\r\n        if (formTask?.id === toTask?.id) return;\r\n\r\n        const type =\r\n          formBoardId === toBoardId && destination.index > source.index\r\n            ? \"after\"\r\n            : \"before\";\r\n        reorderTask({\r\n          fromId: formTask?.id,\r\n          referenceId: toTask?.id,\r\n          fromKanbanId: Number(formBoardId),\r\n          toKanbanId: Number(toBoardId),\r\n          type: type,\r\n        });\r\n      }\r\n    },\r\n    [boards, allTasks, reorderBoard, reorderTask]\r\n  );\r\n};\r\n\r\nconst ColumnsContaier = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: auto;\r\n  margin-right: 2rem;\r\n`;\r\n"],"sourceRoot":""}