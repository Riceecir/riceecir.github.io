{"version":3,"sources":["utils/custom-hook.ts","plugins/request/index.ts","utils/index.ts","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","components/profiler.tsx","index.tsx","auth-provide/index.ts","context/auth-context.tsx","components/lib.tsx"],"names":["useMount","cb","useEffect","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","defaultInitialState","stat","data","error","defaultInitialConfig","throwOnError","useAsync","initialState","initialConfig","config","useReducer","state","action","safeDispatch","dispatch","mountedRef","useMountedRef","useCallback","current","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","then","Error","Promise","resolve","catch","reject","isIdle","isLoading","isError","isSuccess","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","useUrlQueryParam","keys","useSearchParams","searchParams","setSearchParams","useSetUrlQueryParam","stateKeys","useMemo","filtered","Object","entries","fromEntries","filter","key","includes","params","obj","cleanObject","apiUrl","process","http","endpoint","a","token","headers","customConfig","method","Authorization","toUpperCase","qs","body","JSON","stringify","window","fetch","res","status","auth","location","reload","message","json","ok","useHttp","user","useAuth","result","forEach","val","undefined","ErrorBoundary","this","props","fallbackRender","children","React","Component","UnauthenticatedApp","lazy","AuthenticatedApp","Router","navigate","useNavigate","App","className","FullPageError","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProvider","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","client","queue","Profilter","metadata","phases","onRender","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","push","setInterval","length","queueToSend","console","log","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","bootstrapUser","AuthContext","createContext","AuthProvider","setUser","useQueryClient","Provider","form","clear","context","useContext","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","Text","type","ButtonNoPadding","Button","ScreenContainer"],"mappings":"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","file":"static/js/main.fe630999.chunk.js","sourcesContent":["import {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n  useReducer,\r\n} from \"react\";\r\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\r\nimport { cleanObject } from \"utils\";\r\n\r\n/* 挂载 */\r\nexport const useMount = (cb: () => void) => {\r\n  useEffect(() => {\r\n    cb();\r\n  }, []);\r\n};\r\n\r\n/* 函数防抖 */\r\nexport const useDebounce = <V>(value: V, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\r\n    return () => clearTimeout(timeout);\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\n/*  */\r\nexport const useArray = <V>(initialArray: V[]) => {\r\n  const [array, setArray] = useState(initialArray);\r\n\r\n  return {\r\n    value: array,\r\n    setValue: setArray,\r\n    add: (val: V): void => {\r\n      setArray([...array, val]);\r\n    },\r\n    removeIndex: (index: number): void => {\r\n      const newArr = [...array];\r\n      newArr.splice(index, 1);\r\n      setArray(newArr);\r\n    },\r\n    clear: (): void => {\r\n      setArray([]);\r\n    },\r\n  };\r\n};\r\n\r\ninterface State<D> {\r\n  error: Error | null;\r\n  data: D | null;\r\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\r\n}\r\nconst defaultInitialState: State<null> = {\r\n  stat: \"idle\",\r\n  data: null,\r\n  error: null,\r\n};\r\n/* @param }throwOnError：是否抛出错误 */\r\nconst defaultInitialConfig = {\r\n  throwOnError: false,\r\n};\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n  const mountedRef = useMountedRef();\r\n  return useCallback(\r\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\r\n    [dispatch, mountedRef]\r\n  );\r\n};\r\n\r\n/* 异步请求 hook */\r\nexport const useAsync = <D>(\r\n  initialState?: State<D>,\r\n  initialConfig?: typeof defaultInitialConfig\r\n) => {\r\n  const config = { ...defaultInitialConfig, ...initialConfig };\r\n  const [state, dispatch] = useReducer(\r\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\r\n    {\r\n      ...defaultInitialState,\r\n      ...initialState,\r\n    }\r\n  );\r\n\r\n  const safeDispatch = useSafeDispatch(dispatch);\r\n  /* 提供重新获取数据func, 利用 useState 惰性初始化保存函数 */\r\n  const [retry, setRetry] = useState(() => () => {});\r\n\r\n  const setData = useCallback(\r\n    (data: D) =>\r\n      safeDispatch({\r\n        data,\r\n        stat: \"success\",\r\n        error: null,\r\n      }),\r\n    [safeDispatch]\r\n  );\r\n\r\n  const setError = useCallback(\r\n    (error: Error) =>\r\n      safeDispatch({\r\n        data: null,\r\n        stat: \"error\",\r\n        error,\r\n      }),\r\n    [safeDispatch]\r\n  );\r\n\r\n  /* runConfig.retry 传入 retry 时调用方法 */\r\n  const run = useCallback(\r\n    (\r\n      promise: Promise<D>,\r\n      runConfig?: {\r\n        retry: () => Promise<D>;\r\n      }\r\n    ) => {\r\n      if (!promise || !promise.then) {\r\n        throw new Error(\"请传入 Promise\");\r\n      }\r\n\r\n      setRetry(() => () => {\r\n        if (runConfig?.retry) {\r\n          run(runConfig.retry(), runConfig);\r\n        }\r\n      });\r\n\r\n      safeDispatch({ stat: \"loading\" });\r\n      return promise\r\n        .then((data) => {\r\n          setData(data);\r\n          return Promise.resolve(data);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n          if (config.throwOnError) return Promise.reject(error);\r\n          return error;\r\n        });\r\n    },\r\n    [config.throwOnError, setData, setError, safeDispatch]\r\n  );\r\n\r\n  return {\r\n    isIdle: state.stat === \"idle\",\r\n    isLoading: state.stat === \"loading\",\r\n    isError: state.stat === \"error\",\r\n    isSuccess: state.stat === \"success\",\r\n    run,\r\n    retry,\r\n    setData,\r\n    setError,\r\n    ...state,\r\n  };\r\n};\r\n\r\n/** 修改页面标题\r\n * 加载时为旧title,\r\n * 加载后为新传入title\r\n * @param {boolean} keepOnUnmount: 卸载页面时, 是否丢弃当前title(立即刷新为新title)\r\n */\r\nexport const useDocumentTitle = (\r\n  title: string,\r\n  keepOnUnmount: boolean = true\r\n) => {\r\n  // 使用useRef, oldTitle就不会立即被刷新成新title\r\n  const oldTitle = useRef(document.title).current;\r\n\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!keepOnUnmount) document.title = oldTitle;\r\n    };\r\n  }, [oldTitle, keepOnUnmount]);\r\n};\r\n\r\n/**\r\n * 读取url query\r\n * URLSearchParams API: https://developer.mozilla.org/zh-CN/docs/Web/API/URLSearchParams\r\n */\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n  const [searchParams] = useSearchParams();\r\n  const setSearchParams = useSetUrlQueryParam();\r\n  const [stateKeys] = useState(keys);\r\n\r\n  return [\r\n    useMemo(() => {\r\n      /**\r\n       * keys: [\"a\"]\r\n       * { a: \"1\", b: \"2\" } => [[\"a\", \"1\"], [\"b\", \"2\"]] => filtered from keys... => [[\"a\", \"1\"]] => { a: \"1\" }\r\n       */\r\n      const toArr = Object.entries(Object.fromEntries(searchParams));\r\n      const filtered = toArr.filter(([key]) => stateKeys.includes(key as K));\r\n\r\n      return Object.fromEntries(filtered);\r\n    }, [searchParams, stateKeys]),\r\n\r\n    (params: Partial<{ [key in K]: unknown }>) => setSearchParams(params),\r\n  ] as const;\r\n};\r\n\r\n/** 设置 url query */\r\nexport const useSetUrlQueryParam = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  return (params: { [key in string]: unknown }) => {\r\n    const obj = cleanObject({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit;\r\n    return setSearchParams(obj);\r\n  };\r\n};\r\n\r\n/**\r\n * 组件挂载状态\r\n */\r\nexport const useMountedRef = () => {\r\n  const mountedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    mountedRef.current = true;\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  });\r\n\r\n  return mountedRef;\r\n};\r\n\r\ntype undoState<T> = {\r\n  past: T[];\r\n  present: T;\r\n  future: T[];\r\n};\r\n\r\nconst UNDO = \"UNDO\";\r\nconst REDO = \"REDO\";\r\nconst SET = \"SET\";\r\nconst RESET = \"RESET\";\r\n\r\ntype Action<T> = {\r\n  newPresent?: T;\r\n  type: typeof UNDO | typeof REDO | typeof SET | typeof RESET;\r\n};\r\n\r\n/* 使用 useReducer 改造 useUndo */\r\nconst undoReducer = <T>(state: undoState<T>, action: Action<T>) => {\r\n  const { past, present, future } = state;\r\n  const { newPresent } = action;\r\n\r\n  switch (action.type) {\r\n    case UNDO: {\r\n      if (past.length === 0) return state;\r\n\r\n      const previous = past[past.length - 1];\r\n      const newPast = past.slice(0, past.length - 1);\r\n\r\n      return {\r\n        past: newPast,\r\n        present: previous,\r\n        future: [present, ...future],\r\n      };\r\n    }\r\n    case REDO: {\r\n      if (future.length === 0) return state;\r\n\r\n      const next = future[0];\r\n      const newFuture = future.slice(1);\r\n\r\n      return {\r\n        past: [...past, present],\r\n        present: next,\r\n        future: newFuture,\r\n      };\r\n    }\r\n    case SET: {\r\n      if (newPresent === present) return state;\r\n      return {\r\n        past: [...past, newPresent],\r\n        present: newPresent,\r\n        future: [],\r\n      };\r\n    }\r\n    case RESET: {\r\n      return {\r\n        past: [],\r\n        present: newPresent,\r\n        future: [],\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n/* use undo hook */\r\nexport const useUndo = <T>(initialPresent: T) => {\r\n  /* const [past, setPast] = useState<T[]>([])\r\n  const [present, setPresent] = useState<T>(initialPresent)\r\n  const [future, setFuture] = useState<T[]>([]) */\r\n\r\n  /* 互相关联的 state 可以合并成一个 state */\r\n  /* const [state, setState] = useState({\r\n    past: [] as T[],\r\n    present: initialPresent as T,\r\n    future: [] as T[],\r\n  }); */\r\n\r\n  /* 使用 useReducer */\r\n  const [state, dispatch] = useReducer(undoReducer, {\r\n    past: [],\r\n    present: initialPresent,\r\n    future: [],\r\n  });\r\n\r\n  const canUndo = state.past.length > 0;\r\n  const canRedo = state.future.length > 0;\r\n\r\n  const undo = useCallback(() => dispatch({ type: UNDO }), []);\r\n\r\n  const redo = useCallback(() => dispatch({ type: REDO }), []);\r\n\r\n  const set = useCallback(\r\n    (newPresent: T) => dispatch({ type: SET, newPresent }),\r\n    []\r\n  );\r\n\r\n  const reset = useCallback(\r\n    (newPresent: T) => dispatch({ type: RESET, newPresent }),\r\n    []\r\n  );\r\n\r\n  return [state, { undo, redo, set, reset, canUndo, canRedo }];\r\n};\r\n","import * as qs from \"qs\";\r\nimport * as auth from \"auth-provide\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { useCallback } from \"react\";\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\n/* extends: 继承类型 */\r\ninterface Config extends RequestInit {\r\n  data?: object;\r\n  token?: string;\r\n}\r\n\r\n/* http请求封装 */\r\nexport const http = async (\r\n  endpoint: string,\r\n  { data = {}, token = \"\", headers, ...customConfig }: Config = {}\r\n) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n      \"Content-Type\": data ? \"application/json\" : \"\",\r\n    },\r\n    ...customConfig,\r\n  };\r\n\r\n  /* 判断 method 设置请求参数 */\r\n  if (config.method.toUpperCase() === \"GET\") {\r\n    endpoint += `?${qs.stringify(data)}`;\r\n  } else {\r\n    config.body = JSON.stringify(data);\r\n  }\r\n\r\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async (res) => {\r\n    if (res.status === 401) {\r\n      await auth.logout();\r\n      window.location.reload();\r\n      return Promise.reject({ message: \"请重新登录!\" });\r\n    }\r\n\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      return data;\r\n    } else {\r\n      return Promise.reject(data);\r\n    }\r\n  });\r\n};\r\n\r\nexport const useHttp = () => {\r\n  const { user } = useAuth();\r\n\r\n  /* Parameters typeof：typescript操作符 */\r\n  return useCallback(\r\n    (...[endpoint, config]: Parameters<typeof http>) =>\r\n      http(endpoint, { ...config, token: user?.token }),\r\n    [user?.token]\r\n  );\r\n};\r\n\r\n// export const useHttp = (...[endpoint, config]: Parameters<typeof http>) => {\r\n//   const { user } = useAuth()\r\n\r\n//   /* Parameters typeof：typescript操作符 */\r\n//   return http(endpoint, { ...config, token: user?.token })\r\n// }\r\n","export const isFalsy = (val: unknown) => (val === 0 ? false : !val);\r\n\r\nexport const isVoid = (val: any) => [undefined, null, \"\"].includes(val);\r\n\r\n/* 清除无效值 */\r\nexport const cleanObject = (obj?: { [key: string]: unknown }) => {\r\n  if (!obj) return {};\r\n\r\n  const result = { ...obj };\r\n  Object.keys(result).forEach((key) => {\r\n    if (isVoid(result[key])) {\r\n      delete result[key];\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/* 函数防抖 */\r\nconst debounce = (func: () => void, delay = 300) => {\r\n  let timeout: any;\r\n\r\n  return (...param: any) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    timeout = setTimeout(function () {\r\n      // @ts-ignore\r\n      typeof func === \"function\" && func(...param);\r\n    }, delay);\r\n  };\r\n};\r\n\r\nexport const resetRoute = () => (window.location.href = window.location.origin);\r\n","/* 错误边界 */\r\nimport React from \"react\";\r\n\r\ntype FallBackRender = (props: { error: Error | null }) => React.ReactElement;\r\n\r\nexport class ErrorBoundary extends React.Component<\r\n  React.PropsWithChildren<{ fallbackRender: FallBackRender }>,\r\n  { error: Error | null }\r\n> {\r\n  state = { error: null };\r\n\r\n  /** 子组件抛出异常, getDerivedStateFromError接受异常并调用\r\n   * 返回值会赋值给state\r\n   */\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    const { fallbackRender, children } = this.props;\r\n    if (error) return fallbackRender({ error });\r\n    return children;\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\n// import { UnauthenticatedApp } from \"unauthenticated-app\";\r\n// import { AuthenticatedApp } from \"authenticated-app\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { ErrorBoundary } from \"components/error-boundary\";\r\nimport { FullPageError } from \"components/lib\";\r\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\r\n\r\nconst UnauthenticatedApp = React.lazy(() => import(\"unauthenticated-app\"));\r\nconst AuthenticatedApp = React.lazy(() => import(\"authenticated-app\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary fallbackRender={FullPageError}>\r\n        <React.Suspense fallback={<div></div>}>\r\n          <BrowserRouter>\r\n            <Router />\r\n          </BrowserRouter>\r\n        </React.Suspense>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Router = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * 登陆注册需要在完成后手动跳转至首页\r\n   * 这里不能判断已登录的跳转，因为会导致原来pathname丢失，\r\n   * 例如 if (user) navigate('/'); 会导致用户输入 \"/projects/1/board\" => \"/\"\r\n   *\r\n   * 当然路由配置还有待完善\r\n   */\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/login\");\r\n  }, [user, navigate]);\r\n\r\n  return user ? <AuthenticatedApp /> : <UnauthenticatedApp />;\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ReactNode } from \"react\";\r\nimport { AuthProvider } from \"context/auth-context\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: {\r\n        refetchOnWindowFocus: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AuthProvider>{children}</AuthProvider>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n","import React, {\r\n  Profiler,\r\n  ProfilerProps,\r\n  ProfilerOnRenderCallback,\r\n} from \"react\";\r\n\r\ntype Props = { metadata?: any; phases?: (\"mount\" | \"update\")[] } & Omit<\r\n  ProfilerProps,\r\n  \"onRender\"\r\n>;\r\n\r\nlet queue: unknown[] = [];\r\n\r\nconst sendProfileQueue = () => {\r\n  if (!queue.length) return;\r\n\r\n  const queueToSend = [...queue];\r\n  queue = [];\r\n  console.log(queueToSend);\r\n};\r\n/* 每5秒输出到控制台一次 */\r\nsetInterval(sendProfileQueue, 5000);\r\n\r\nexport default function Profilter({ metadata, phases, ...props }: Props) {\r\n  const reportProfile: ProfilerOnRenderCallback = (\r\n    id,\r\n    phase,\r\n    actualDuration,\r\n    baseDuration,\r\n    startTime,\r\n    commitTime,\r\n    interactions\r\n  ) => {\r\n    if (!phases || phases.includes(phase)) {\r\n      queue.push({\r\n        id,\r\n        phase,\r\n        actualDuration,\r\n        baseDuration,\r\n        startTime,\r\n        commitTime,\r\n        interactions,\r\n      });\r\n    }\r\n  };\r\n\r\n  return <Profiler onRender={reportProfile} {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { loadServer, DevTools } from \"jira-dev-tool\";\r\nimport \"antd/dist/antd.less\";\r\nimport { AppProvider } from \"context\";\r\nimport Profiler from \"components/profiler\";\r\n\r\nloadServer(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <AppProvider>\r\n        {process.env.NODE_ENV === \"development\" && <DevTools />}\r\n        <Profiler id={\"root app\"} phases={[\"mount\", \"update\"]}>\r\n          <App />\r\n        </Profiler>\r\n      </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { User } from \"types/user\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\nconst localStorageKey = \"__auth_provide_token__\";\r\n\r\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\r\n\r\nexport const setToken = (token: string) =>\r\n  window.localStorage.setItem(localStorageKey, token);\r\n\r\nexport const handleUserResponse = ({ user }: { user: User }) => {\r\n  setToken(user.token || \"\");\r\n  return user;\r\n};\r\n\r\n/* 登录 */\r\nexport const login = async (data: { username: string; password: string }) => {\r\n  return fetch(`${apiUrl}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then(async (res) => {\r\n    if (res.ok) {\r\n      return handleUserResponse(await res.json());\r\n    } else {\r\n      return Promise.reject(await res.json());\r\n    }\r\n  });\r\n};\r\n\r\n/* 注册 */\r\nexport const register = async (data: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  return fetch(`${apiUrl}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then(async (res) => {\r\n    if (res.ok) {\r\n      return handleUserResponse(await res.json());\r\n    } else {\r\n      return Promise.reject(await res.json());\r\n    }\r\n  });\r\n};\r\n\r\nexport const logout = async () =>\r\n  window.localStorage.removeItem(localStorageKey);\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport * as auth from \"auth-provide\";\r\nimport { User } from \"types/user\";\r\nimport { http } from \"plugins/request\";\r\nimport { useAsync, useMount } from \"utils/custom-hook\";\r\nimport { FullPageLoading, FullPageError } from \"components/lib\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\ninterface AuthForm {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\n/* 初始化用户数据 */\r\nconst bootstrapUser = async () => {\r\n  let user = null;\r\n  const token = auth.getToken();\r\n  if (token) {\r\n    const data = await http(\"me\", { token });\r\n    user = data.user;\r\n  }\r\n\r\n  return user;\r\n};\r\n\r\nconst AuthContext =\r\n  React.createContext<\r\n    | {\r\n        user: User | null;\r\n        login: (form: AuthForm) => Promise<void>;\r\n        register: (form: AuthForm) => Promise<void>;\r\n        logout: () => void;\r\n      }\r\n    | undefined\r\n  >(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const {\r\n    data: user,\r\n    error,\r\n    isLoading,\r\n    isIdle,\r\n    isError,\r\n    run,\r\n    setData: setUser,\r\n  } = useAsync<User | null>();\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n  const logout = () =>\r\n    auth.logout().then(() => {\r\n      setUser(null);\r\n      queryClient.clear();\r\n    });\r\n\r\n  /* 首次加载设置default user */\r\n  useMount(() => {\r\n    run(bootstrapUser());\r\n  });\r\n\r\n  if (isIdle || isLoading) return <FullPageLoading />;\r\n\r\n  if (isError) {\r\n    return <FullPageError error={error} />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      children={children}\r\n      value={{ user, login, register, logout }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\r\n  }\r\n\r\n  return context;\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Button, Spin, Typography } from \"antd\";\r\nimport { DevTools } from \"jira-dev-tool\";\r\n\r\n/**\r\n * @prop {} gap: 子元素是否设置 margin-right\r\n */\r\nexport const Row = styled.div<{\r\n  gap?: Number | boolean;\r\n  between?: boolean;\r\n  marginBottom?: Number;\r\n}>`\r\n  display: flex;\r\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\r\n  align-items: center;\r\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\r\n\r\n  & > * {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-right: ${(props) =>\r\n      typeof props.gap === \"number\"\r\n        ? props.gap + \"rem\"\r\n        : props.gap\r\n        ? \"2rem\"\r\n        : undefined};\r\n  }\r\n`;\r\n\r\n/**\r\n * 全屏加载动画\r\n */\r\nconst FullPage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\nexport const FullPageLoading = () => (\r\n  <FullPage>\r\n    <Spin size=\"large\" />\r\n  </FullPage>\r\n);\r\n\r\n/**\r\n * 全屏错误信息\r\n */\r\nexport const FullPageError = ({ error }: { error: Error | null }) => (\r\n  <FullPage>\r\n    <DevTools />\r\n    <ErrorBox error={error} />\r\n  </FullPage>\r\n);\r\n\r\n/**\r\n * 包含检测数据类型的错误信息组件\r\n */\r\n// 类型守卫:\r\nconst isError = (value: any): value is Error => value?.message;\r\nexport const ErrorBox = ({ error }: { error: unknown }) => {\r\n  if (isError(error))\r\n    return <Typography.Text type=\"danger\">{error?.message}</Typography.Text>;\r\n  return null;\r\n};\r\n\r\n/** 无padding <Button> */\r\nexport const ButtonNoPadding = styled(Button)`\r\n  padding: 0;\r\n`;\r\n\r\n/* 视图样式容器 */\r\nexport const ScreenContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 3.2rem;\r\n`;\r\n"],"sourceRoot":""}